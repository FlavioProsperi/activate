1. Introduction
===============

Overview

Activate is a framework to persist objects in Scala. It is a STM (|link|Software Transactional Memory) durable, with pluggable persistence. Its core is the |link|RadonSTM, which provides a powerful mechanism for controlling transactions in memory, analogous to the transactions of databases, to do optimistic concurrency control. The durability of transactions (persistence) is pluggable, and can use persistence in different paradigms such as relational (JDBC), prevalence (|link|Prevayler) and non-relational (|link|MongoDB).

Benefits

The main benefits of the framework are:

- Atomic, consistent, isolated and durable transactions. You can use entities without worrying about concurrency issues.
- Entities are always consistent in memory and in the persistence layer. For example, if rollback occurs, entities in memory stays consistent.
- Transaction propagation control, including nested transactions.
- Transparent Persistence. Just use the entities in transactions and they are automatically persisted.
- Entities are lazy loaded and initialized automatically when needed.
- Queries are type-safe and consistent, even with objects created in the current transaction. Therefore, an entity created in the same transaction may be returned in a query.
- The available memory is used efficiently by using soft references for the entities that are in memory. If you have enough space, your database can stay all in memory and this will give a considerable performance gain.

2. Quick guide
==============

The activate-example project is a quick way to start using Activate. First, you have to download xsbt |link|sbt-launch.jar and the |link|project.

Create a sbt launch script like this and put in system path:

	java -XX:MaxPermSize=512m -Xmx512M -noverify -jar /location/of/sbt-launch.jar "$@"

Remember to replace "/location/of/sbt-launch.jar" with the actual location of sbt-launch.jar. You can also call this command line directly. Remember always to add "-noverify".

Modify project/ActivateExampleBuild.scala and com/example/foo/ActivateExampleContext.scala to determine the storage. Memory storage is the default value.

Call sbt inside activate-example folder and create the eclipse project:

	$ sbt
	> eclipse

Now you can import into eclipse. It is necessary that the scala plugin is installed http://scala-ide.org/.

If you want to change the storage, simply change the two classes mentioned above, open the sbt console and rebuild the project sbt eclipse with the same command ("eclipse").

3. Configuration
===============
	3.1 Contexts
	3.2 Storages
4. Entities
===============
	4.1 Entity trait
	4.2 UUID
	4.5 Entity properties
5. Queries
===============
6. Transactions
===============
7. Mass statements
===============
8. Migrations
===============
9. Architecture
===============
	